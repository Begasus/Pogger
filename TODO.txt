Important Features:
* Default column layouts for ~/feeds and ~/config/settings/Pogger/Subscriptions
* Localization


Important improvements:
* Stop memory accumulation
	* A few MB accumulate on every update
	* ime it's than .1 MB per feed― but if you have several feeds, it can
	  accumulate to a hefty sum after some time. In my case, with ~40 feeds
	  and updates every 30 minutes, it got to about 200MB after a week or
	  so.
	* _Huge_ problem, but I haven't had luck figuring it out yet…
* Move from BLists to BObjectLists where possible
* No hardcoded paths
* General input sanitization
* File error-handling
	* e.g., Utils.cpp's userFileError
* Fix background of Feeds List error status icon (it's black, not transparent)
* Check if arg is a file or not (treat appropriately)
* Make UI friendly to whatever font-size you throw at it
	* Give a max size to the progress label in FeedsView
* Make fancy Markdown README
* Make an icon, somehow (idk I'm not an artist)


Nice Improvements:
* Save window positions
	* Main window
	* Subscription-edit window
* Proper scripting support
* Show in desktray
* Store feeds in kEnqueueFeeds/etc messages as paths? hmm
	* This way, if the user edits the feed after it is enqueued but before
	processing, the changes will be applied.
* Move the provisional BList download queue to a BJob + JobQueue system
	* This might add some more flexibility
* Multiple downloads at once?
	* Array of thread_ids for multiple DL threads?
		* In which case, it'd probably make sense to only spin them
		  up as necessary, and kill when everything's done.
			* That'd require a proper queue system, instead of just
			  spamming data to the download thread lol
				* Using a proper queue list would give faster 
				  results to Notifer about how many feeds are
				  enqueued (so things *feel* faster)
